trigger: none
pr:
  branches:
    include:
    - master
    - beta/*
  paths:
    include:
    - deploy/terraform/*
variables:
  - group: azure-config-variables
  - group: azure-sap-hana-pipeline-secrets
  - template: templates/variables.yaml
stages:
- stage:
  pool:
    vmImage: "ubuntu-18.04"
  variables:
    ssh_timeout_s: 120
  jobs:
  - job: createDeployer
    steps:
      - template: templates/util/prepare-agent.yml
      - template: templates/deployer/create-deployer-steps.yml
        parameters:
          branch_name: $(sourceBranchName)
          deployer_env: "$(Build.BuildId)"
      - template: templates/util/collect-deployer-info.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/deployer/post-deployer-steps.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
  - job: createSAPLib
    dependsOn: createDeployer
    steps:
      - template: templates/util/prepare-agent.yml
      - template: templates/util/collect-deployer-info.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/util/add-agent-to-deployer-nsg.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/saplib/create-saplib-steps.yml
        parameters:
          branch_name: $(sourceBranchName)
          saplib_env: "$(Build.BuildId)"
      - template: templates/saplib/post-saplib-steps.yml
        parameters:
          branch_name: $(sourceBranchName)
          deployer_env: "$(Build.BuildId)"
          saplib_env: "$(Build.BuildId)"
      - template: templates/util/remove-agent-from-deployer-nsg.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
  - job: createSAPLandscape
    dependsOn: createSAPLib
    steps:
      - template: templates/util/prepare-agent.yml
      - template: templates/util/collect-deployer-info.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/util/add-agent-to-deployer-nsg.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/saplandscape/create-saplandscape-steps.yml
        parameters:
          branch_name: $(sourceBranchName)
          deployer_env: "$(Build.BuildId)"
          saplib_env: "$(Build.BuildId)"
          saplandscape_env: "$(Build.BuildId)"
      - template: templates/util/remove-agent-from-deployer-nsg.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
  - job: createSAPSystem
    dependsOn: createSAPLandscape
    steps:
      - template: templates/util/prepare-agent.yml
      - template: templates/util/collect-deployer-info.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/util/add-agent-to-deployer-nsg.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
      - template: templates/sapsystem/create-sapsystem-steps.yml
        parameters:
          branch_name: $(sourceBranchName)
          deployer_env: "$(Build.BuildId)"
          saplib_env: "$(Build.BuildId)"
          sapsystem_env: "$(Build.BuildId)"
      - template: templates/util/remove-agent-from-deployer-nsg.yml
        parameters:
          deployer_env: "$(Build.BuildId)"
  - job: deleteAll
    dependsOn: createSAPSystem
    condition: or(succeededOrFailed(), always())
    steps:
      - script: |
          environment="U$(echo $(Build.BuildId) | rev | cut -c1-4 | rev)"

          az login --service-principal --user $(hana-pipeline-spn-id) --password $(hana-pipeline-spn-pw) --tenant $(landscape-tenant) --output none
          sapsystem_rg="${environment}-EAUS-SAP-PRD"
          echo "=== Mark and try to delete rg ${sapsystem_rg} ==="
          az group update --resource-group ${sapsystem_rg} --set tags.Delete=True
          az group delete -n ${sapsystem_rg} --no-wait -y

          saplandscape_rg="${environment}-EAUS-SAP0-INFRASTRUCTURE"
          echo "=== Mark and try to delete rg ${saplandscape_rg} ==="
          az group update --resource-group ${saplandscape_rg} --set tags.Delete=True
          az group delete -n ${saplandscape_rg} --no-wait -y

          saplib_rg="${environment}-EAUS-SAP_LIBRARY"
          echo "=== Mark and try to delete rg ${saplib_rg} ==="
          az group update --resource-group ${saplib_rg} --set tags.Delete=True
          az group delete -n ${saplib_rg} --no-wait -y

          deployer_rg="${environment}-EAUS-MGMT-INFRASTRUCTURE"
          echo "=== Mark and try to delete rg ${deployer_rg} ==="
          az group update --resource-group ${deployer_rg} --set tags.Delete=True
          az group delete -n ${deployer_rg} --no-wait -y
        displayName: "Clean up"
        env:
          ARM_CLIENT_ID: $(hana-pipeline-spn-id)
          ARM_CLIENT_SECRET: $(hana-pipeline-spn-pw)
          ARM_TENANT_ID: $(landscape-tenant)
          ARM_SUBSCRIPTION_ID: $(landscape-subscription)
